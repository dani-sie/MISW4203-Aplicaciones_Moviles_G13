package com.uniandes.vinylhub.ui

import androidx.compose.ui.test.*
import androidx.compose.ui.test.junit4.createAndroidComposeRule
import androidx.test.ext.junit.runners.AndroidJUnit4
import com.uniandes.vinylhub.presentation.MainActivity
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith

/**
 * Pruebas E2E para HU01: Consultar cat치logo de 치lbumes
 */
@RunWith(AndroidJUnit4::class)
class AlbumListScreenTest {

    @get:Rule
    val composeTestRule = createAndroidComposeRule<MainActivity>()

    /**
     * E2E-HU01-01: Navegaci칩n a cat치logo desde Home
     * Verifica que al hacer clic en "Ver Cat치logo de 츼lbumes" desde Home,
     * se navega a la lista de 치lbumes
     */
    @Test
    fun testNavigationToAlbumListFromHome() {
        // Arrange: Verificar que estamos en Home
        composeTestRule.onNodeWithText("游꿧 VinylHub").assertIsDisplayed()
        
        // Act: Hacer clic en el bot칩n de 치lbumes
        composeTestRule.onNodeWithText("Ver Cat치logo de 츼lbumes").performClick()
        
        // Assert: Verificar que se muestra la pantalla de cat치logo
        composeTestRule.waitUntil(timeoutMillis = 5000) {
            composeTestRule.onAllNodesWithText("游꿧 Cat치logo")
                .fetchSemanticsNodes().isNotEmpty()
        }
        composeTestRule.onNodeWithText("游꿧 Cat치logo").assertIsDisplayed()
    }

    /**
     * E2E-HU01-02: Carga de lista de 치lbumes desde API
     * Verifica que se cargan y muestran 치lbumes desde la API
     */
    @Test
    fun testAlbumListLoadsFromAPI() {
        // Arrange: Navegar a la lista de 치lbumes
        composeTestRule.onNodeWithText("Ver Cat치logo de 츼lbumes").performClick()
        
        // Act: Esperar a que se carguen los 치lbumes
        composeTestRule.waitUntil(timeoutMillis = 10000) {
            // Buscar cualquier texto que indique que hay 치lbumes cargados
            // Como los nombres de 치lbumes son din치micos, buscamos elementos comunes
            try {
                composeTestRule.onAllNodesWithText("Cargando 치lbumes...")
                    .fetchSemanticsNodes().isEmpty()
            } catch (e: Exception) {
                true
            }
        }
        
        // Assert: Verificar que no se muestra el mensaje de carga
        // y que hay contenido en la pantalla
        Thread.sleep(2000) // Dar tiempo para que se rendericen los 치lbumes
        
        // Verificar que la pantalla de cat치logo est치 visible
        composeTestRule.onNodeWithText("游꿧 Cat치logo").assertIsDisplayed()
    }

    /**
     * E2E-HU01-03: Expansi칩n de 치lbum en lista
     * Verifica que al hacer clic en un 치lbum, se expande mostrando m치s informaci칩n
     */
    @Test
    fun testAlbumExpansionInList() {
        // Arrange: Navegar a la lista de 치lbumes y esperar carga
        composeTestRule.onNodeWithText("Ver Cat치logo de 츼lbumes").performClick()
        
        composeTestRule.waitUntil(timeoutMillis = 10000) {
            try {
                composeTestRule.onAllNodesWithText("Cargando 치lbumes...")
                    .fetchSemanticsNodes().isEmpty()
            } catch (e: Exception) {
                true
            }
        }
        
        Thread.sleep(3000) // Esperar a que se rendericen los 치lbumes
        
        // Act: Hacer clic en el primer 치lbum (hacer scroll y buscar cualquier card)
        // Como los 치lbumes se cargan din치micamente, intentamos hacer clic en la primera card
        composeTestRule.onAllNodes(hasClickAction())
            .onFirst()
            .performClick()
        
        Thread.sleep(1000) // Esperar animaci칩n de expansi칩n
        
        // Assert: Verificar que seguimos en la pantalla de cat치logo
        // (la expansi칩n ocurre en la misma pantalla)
        composeTestRule.onNodeWithText("游꿧 Cat치logo").assertIsDisplayed()
    }
}

